<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Sign Up</title>
  <meta name="theme-color" content="#111827" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Poppins:wght@600&display=swap" rel="stylesheet" />
  <style>
    :root{
      --bg: #0b1220;
      --bg-grad-1:#0f172a;
      --bg-grad-2:#111827;
      --card:#0f172a;
      --muted:#94a3b8;
      --text:#e5e7eb;
      --brand:#eab308; /* amber-500 */
      --brand-600:#ca8a04;
      --error:#ef4444;
      --success:#22c55e;
      --ring: rgba(234,179,8,.45);
      --ring-strong: rgba(234,179,8,.7);
      --input:#0b1220;
      --border:#1f2937;
      --shadow: 0 20px 40px rgba(0,0,0,.35), inset 0 1px rgba(255,255,255,.03);
      --radius: 16px;
    }
    * { box-sizing: border-box }
    html, body { height: 100% }

    body{
      margin: 0;
      font-family: 'Inter', system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, "Apple Color Emoji","Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
      color: var(--text);
      background: radial-gradient(1200px 800px at 20% -20%, rgba(234,179,8,.08), transparent 60%),
                  radial-gradient(1000px 600px at 120% 20%, rgba(234,179,8,.05), transparent 60%),
                  linear-gradient(180deg, var(--bg-grad-1), var(--bg-grad-2));
      display: grid;
      place-items: center;
      padding: 24px;
    }

    .container{
      width: 100%;
      max-width: 420px;
    }

    .card{
      background: linear-gradient(180deg, rgba(255,255,255,.02), rgba(255,255,255,.01)) , var(--card);
      border: 1px solid var(--border);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      padding: 28px;
      backdrop-filter: blur(6px);
    }

    .header{
      text-align: center;
      margin-bottom: 18px;
    }
    .logo{
      width: 44px; height: 44px; border-radius: 10px;
      display: grid; place-items: center;
      margin: 0 auto 12px;
      background: radial-gradient(60% 60% at 30% 20%, rgba(234,179,8,.55), rgba(234,179,8,.15));
      border: 1px solid rgba(234,179,8,.35);
      color: var(--text);
    }
    .title{
      font-family: 'Poppins', Inter, system-ui, sans-serif;
      font-size: 22px; letter-spacing: .3px; margin: 0 0 6px 0;
    }
    .subtitle{
      margin: 0; font-size: 14px; color: var(--muted);
    }

    .alert{
      border-radius: 12px;
      padding: 12px 14px;
      font-size: 14px;
      line-height: 1.4;
      margin: 14px 0;
      border: 1px solid transparent;
    }
    .alert-error{ background: rgba(239,68,68,.06); border-color: rgba(239,68,68,.25); color:#fecaca; }
    .alert-success{ background: rgba(34,197,94,.08); border-color: rgba(34,197,94,.25); color:#bbf7d0; }

    form { margin-top: 10px; }

    .field{
      margin-bottom: 14px;
    }
    .label{
      display: flex; justify-content: space-between; align-items: baseline;
      font-weight: 600; font-size: 13px; color: #e2e8f0; margin-bottom: 8px;
    }
    .input-wrap{
      position: relative;
    }
    .input{
      width: 100%;
      appearance: none;
      background: var(--input);
      border: 1px solid var(--border);
      color: var(--text);
      padding: 12px 42px 12px 40px;
      border-radius: 12px;
      font-size: 15px;
      outline: none;
      transition: border-color .18s ease, box-shadow .18s ease, transform .06s ease;
    }
    .input::placeholder{ color: #76839b; }
    .input:focus{
      border-color: var(--brand);
      box-shadow: 0 0 0 4px var(--ring);
    }
    .icon{
      position: absolute; left: 12px; top: 50%; transform: translateY(-50%);
      color: #a3a3a3;
      width: 18px; height: 18px;
      pointer-events: none;
    }
    .endcap{
      position: absolute; right: 8px; top: 50%; transform: translateY(-50%); display: inline-flex; gap: 6px;
      align-items: center;
    }
    .icon-btn{
      border: 0; background: transparent; color: #a3a3a3; width: 28px; height: 28px; border-radius: 8px;
      display: grid; place-items: center; cursor: pointer;
    }
    .icon-btn:hover{ color: var(--text); background: rgba(255,255,255,.04); }
    .icon-btn:focus-visible{ outline: 2px solid var(--brand-600); outline-offset: 2px; }

    .helper{
      margin-top: 6px; font-size: 12px; color: var(--muted);
    }
    .error-text{
      color: #fecaca; margin-top: 6px; font-size: 12px; display: none;
    }
    .input[aria-invalid="true"]{ border-color: rgba(239,68,68,.7); box-shadow: 0 0 0 4px rgba(239,68,68,.15); }
    .input[aria-invalid="true"] ~ .error-text{ display: block; }

    .checkbox{
      display: flex; gap: 10px; align-items: flex-start;
      border: 1px dashed var(--border); padding: 12px; border-radius: 12px;
      background: rgba(255,255,255,.01);
    }
    .checkbox input{
      margin-top: 2px; accent-color: var(--brand);
      width: 18px; height: 18px;
    }
    .checkbox label{
      font-size: 13px; color: #e2e8f0;
    }
    .checkbox a{
      color: var(--brand); text-decoration: none; font-weight: 600;
    }
    .checkbox a:hover{ text-decoration: underline; }

    .actions{ margin-top: 16px; }
    .btn{
      width: 100%; padding: 12px 14px;
      background: linear-gradient(180deg, #facc15, #eab308);
      color: #1f2937; border: 0; border-radius: 12px;
      font-weight: 700; font-size: 16px; letter-spacing: .2px;
      box-shadow: 0 8px 20px rgba(234,179,8,.25), inset 0 -6px 10px rgba(0,0,0,.15);
      cursor: pointer;
      transition: transform .08s ease, box-shadow .2s ease, filter .15s ease;
    }
    .btn:hover{ transform: translateY(-1px); filter: brightness(1.02); }
    .btn:active{ transform: translateY(0); box-shadow: 0 4px 12px rgba(234,179,8,.20), inset 0 -2px 4px rgba(0,0,0,.25); }
    .btn:disabled{
      opacity: .6; cursor: not-allowed; filter: grayscale(20%);
    }

    .foot{
      text-align: center; margin-top: 14px; font-size: 14px; color: var(--muted);
    }
    .foot a{ color: var(--brand); text-decoration: none; font-weight: 600; }
    .foot a:hover{ text-decoration: underline; }

    .strength{
      margin-top: 8px; display: flex; gap: 6px; align-items: center;
    }
    .bar{
      height: 6px; flex: 1; background: #1f2937; border-radius: 999px; overflow: hidden;
      border: 1px solid #111827;
    }
    .bar-fill{
      display: block; height: 100%; width: 0%;
      background: linear-gradient(90deg, #ef4444, #f59e0b, #22c55e);
      transition: width .25s ease;
    }
    .strength-label{ font-size: 12px; color: var(--muted); min-width: 72px; text-align: right; }
    @media (max-width: 420px){
      .card{ padding: 22px; border-radius: 14px; }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="card">
      <div class="header">
        <div class="logo" aria-hidden="true">
          <svg width="22" height="22" viewBox="0 0 24 24" fill="none">
            <path d="M12 3l2.6 5.27L20.5 9l-4.3 4.19L17.2 20 12 16.9 6.8 20l1-6.81L3.5 9l5.9-.73L12 3z" stroke="currentColor" stroke-width="1.5" />
          </svg>
        </div>
        <h1 class="title">Create your account</h1>
        <p class="subtitle">Join us in seconds. It’s fast and secure.</p>
      </div>

      <% if (typeof success !== 'undefined' && success) { %>
        <div class="alert alert-success"><%= success %></div>
      <% } %>

      <% if (typeof errors !== 'undefined' && errors.length) { %>
        <div class="alert alert-error">
          <ul style="margin:0 0 0 18px; padding:0;">
            <% errors.forEach(function(err){ %>
              <li><%= err %></li>
            <% }) %>
          </ul>
        </div>
      <% } %>

      <form action="/signup" method="post" id="signupForm" novalidate>
        <% if (typeof csrfToken !== 'undefined') { %>
          <input type="hidden" name="_csrf" value="<%= csrfToken %>">
        <% } %>

        <div class="field">
          <label class="label" for="username">
            Username
            <span class="helper">3–24 chars, letters/numbers/_</span>
          </label>
          <div class="input-wrap">
            <span class="icon" aria-hidden="true">
              <svg width="18" height="18" viewBox="0 0 24 24" fill="none">
                <path d="M12 12c2.761 0 5-2.239 5-5S14.761 2 12 2 7 4.239 7 7s2.239 5 5 5zM3 22c0-3.866 3.582-7 9-7s9 3.134 9 7" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
              </svg>
            </span>
            <input
              class="input"
              type="text"
              id="username"
              name="username"
              placeholder="yourname"
              required
              minlength="3"
              maxlength="24"
              pattern="^[a-zA-Z0-9_]+$"
              aria-invalid="<%= (fieldErrors && fieldErrors.username) ? 'true' : 'false' %>"
              value="<%= (formData && formData.username) ? formData.username : '' %>"
              autocomplete="username"
            />
            <div class="error-text"><%= (fieldErrors && fieldErrors.username) ? fieldErrors.username : 'Please enter a valid username.' %></div>
          </div>
        </div>

        <div class="field">
          <label class="label" for="email">
            Email
            <span class="helper">We’ll send a confirmation</span>
          </label>
          <div class="input-wrap">
            <span class="icon" aria-hidden="true">
              <svg width="18" height="18" viewBox="0 0 24 24" fill="none">
                <path d="M3 6.75A2.75 2.75 0 0 1 5.75 4h12.5A2.75 2.75 0 0 1 21 6.75v10.5A2.75 2.75 0 0 1 18.25 20H5.75A2.75 2.75 0 0 1 3 17.25V6.75z" stroke="currentColor" stroke-width="1.5"/>
                <path d="M3.5 6.5l8.5 6 8.5-6" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
              </svg>
            </span>
            <input
              class="input"
              type="email"
              id="email"
              name="email"
              placeholder="name@example.com"
              required
              aria-invalid="<%= (fieldErrors && fieldErrors.email) ? 'true' : 'false' %>"
              value="<%= (formData && formData.email) ? formData.email : '' %>"
              autocomplete="email"
            />
            <div class="error-text"><%= (fieldErrors && fieldErrors.email) ? fieldErrors.email : 'Please enter a valid email address.' %></div>
          </div>
        </div>

        <div class="field">
          <label class="label" for="password">
            Password
            <span class="helper">Min 8 chars, mix recommended</span>
          </label>
          <div class="input-wrap">
            <span class="icon" aria-hidden="true">
              <svg width="18" height="18" viewBox="0 0 24 24" fill="none">
                <rect x="4" y="10" width="16" height="10" rx="2" stroke="currentColor" stroke-width="1.5"/>
                <path d="M8 10V7a4 4 0 1 1 8 0v3" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
              </svg>
            </span>
            <input
              class="input"
              type="password"
              id="password"
              name="password"
              placeholder="Create a strong password"
              required
              minlength="8"
              autocomplete="new-password"
              aria-invalid="<%= (fieldErrors && fieldErrors.password) ? 'true' : 'false' %>"
            />
            <span class="endcap">
              <button type="button" class="icon-btn" id="togglePwd" aria-label="Show password">
                <svg id="eyeOpen" width="18" height="18" viewBox="0 0 24 24" fill="none">
                  <path d="M2 12s4-7 10-7 10 7 10 7-4 7-10 7S2 12 2 12z" stroke="currentColor" stroke-width="1.5"/>
                  <circle cx="12" cy="12" r="3.5" stroke="currentColor" stroke-width="1.5"/>
                </svg>
                <svg id="eyeClosed" style="display:none" width="18" height="18" viewBox="0 0 24 24" fill="none">
                  <path d="M3 3l18 18" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
                  <path d="M2 12s4-7 10-7c2.1 0 4 .74 5.57 1.82M22 12s-4 7-10 7c-2.1 0-4-.74-5.57-1.82" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
                </svg>
              </button>
            </span>
            <div class="error-text"><%= (fieldErrors && fieldErrors.password) ? fieldErrors.password : 'Password must be at least 8 characters.' %></div>
          </div>
          <div class="strength" aria-live="polite">
            <div class="bar"><span class="bar-fill" id="pwdStrength"></span></div>
            <div class="strength-label" id="pwdStrengthLabel">Weak</div>
          </div>
        </div>

        <div class="field">
          <div class="checkbox">
            <input type="checkbox" id="terms" name="termsAccepted" required <%= (formData && formData.termsAccepted) ? 'checked' : '' %> />
            <label for="terms">
              I agree to the
              <a href="/terms" target="_blank" rel="noopener">Terms and Conditions</a>.
            </label>
          </div>
        </div>

        <div class="actions">
          <button type="submit" class="btn" id="submitBtn">Create Account</button>
        </div>
      </form>

      <p class="foot">Already have an account?
        <a href="/">Log in</a>
      </p>
    </div>
  </div>

  <script>
    (function(){
      const form = document.getElementById('signupForm');
      const username = document.getElementById('username');
      const email = document.getElementById('email');
      const password = document.getElementById('password');
      const terms = document.getElementById('terms');
      const submitBtn = document.getElementById('submitBtn');
      const pwdStrength = document.getElementById('pwdStrength');
      const pwdStrengthLabel = document.getElementById('pwdStrengthLabel');
      const togglePwd = document.getElementById('togglePwd');
      const eyeOpen = document.getElementById('eyeOpen');
      const eyeClosed = document.getElementById('eyeClosed');

      function setInvalid(input, isInvalid){
        input.setAttribute('aria-invalid', isInvalid ? 'true' : 'false');
      }

      function validateUsername(){
        const val = username.value.trim();
        const ok = /^[a-zA-Z0-9_]{3,24}$/.test(val);
        setInvalid(username, !ok);
        return ok;
      }

      function validateEmail(){
        const val = email.value.trim();
        // Simple RFC-ish check
        const ok = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(val);
        setInvalid(email, !ok);
        return ok;
      }

      function scorePassword(pw){
        let score = 0;
        if (pw.length >= 8) score += 1;
        if (/[A-Z]/.test(pw)) score += 1;
        if (/[a-z]/.test(pw)) score += 1;
        if (/\d/.test(pw)) score += 1;
        if (/[^A-Za-z0-9]/.test(pw)) score += 1;
        return Math.min(score, 5);
      }

      function updateStrength(){
        const s = scorePassword(password.value);
        const percent = [0, 25, 45, 65, 85, 100][s];
        pwdStrength.style.width = percent + '%';
        const label = ['Weak','Weak','Okay','Good','Strong','Strong'][s];
        pwdStrengthLabel.textContent = label;
      }

      function validatePassword(){
        const ok = password.value.length >= 8;
        setInvalid(password, !ok);
        updateStrength();
        return ok;
      }

      function validateTerms(){
        submitBtn.disabled = !terms.checked;
        return terms.checked;
      }

      username.addEventListener('input', validateUsername);
      email.addEventListener('input', validateEmail);
      password.addEventListener('input', validatePassword);
      terms.addEventListener('change', validateTerms);

      togglePwd.addEventListener('click', function(){
        const isPw = password.type === 'password';
        password.type = isPw ? 'text' : 'password';
        eyeOpen.style.display = isPw ? 'none' : '';
        eyeClosed.style.display = isPw ? '' : 'none';
        togglePwd.setAttribute('aria-label', isPw ? 'Hide password' : 'Show password');
      });

      // Initialize
      validateTerms();
      updateStrength();

      form.addEventListener('submit', function(e){
        const ok = validateUsername() & validateEmail() & validatePassword() & validateTerms();
        if (!ok) {
          e.preventDefault();
          // Focus the first invalid
          if (username.getAttribute('aria-invalid') === 'true') username.focus();
          else if (email.getAttribute('aria-invalid') === 'true') email.focus();
          else if (password.getAttribute('aria-invalid') === 'true') password.focus();
        }
      });
    })();
  </script>
</body>
</html>